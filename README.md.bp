# Food Truck APK - Application Mobile React Native

Une application mobile moderne développée avec React Native et Expo pour la gestion de produits et d'analytics.

## 📱 Description

Food Truck APK est une application mobile complète qui permet aux utilisateurs de :
- Gérer un catalogue de produits
- Consulter des analytics et statistiques
- Gérer leur profil utilisateur
- Recevoir des notifications
- Naviguer avec une interface intuitive

## 🚀 Technologies Utilisées

- **React Native** (0.79.4) - Framework mobile cross-platform
- **Expo** (53.0.15) - Plateforme de développement React Native
- **TypeScript** (5.8.3) - Typage statique
- **Expo Router** (5.1.2) - Navigation basée sur les fichiers
- **React Native Elements** (3.4.3) - Composants UI
- **AsyncStorage** (2.2.0) - Stockage local
- **Lucide React Native** (0.525.0) - Icônes modernes

## 📁 Structure du Projet

```
test.mobile/
├── app/                    # Pages et navigation (Expo Router)
│   ├── (auth)/            # Pages d'authentification
│   ├── (tabs)/            # Pages principales avec onglets
│   ├── product/           # Pages de gestion des produits
│   └── _layout.tsx        # Layout principal
├── components/            # Composants réutilisables
│   ├── Analytic/          # Composants d'analytics
│   ├── Common/            # Composants communs
│   ├── Form/              # Composants de formulaires
│   ├── ProductList/       # Composants de liste de produits
│   └── Profil/            # Composants de profil
├── contexts/              # Contextes React (état global)
├── data/                  # Données JSON statiques
├── hooks/                 # Hooks personnalisés
├── constants/             # Constantes et types
└── assets/                # Images et ressources
```

## 🛠️ Installation

### Prérequis

- Node.js (version 18 ou supérieure)
- npm ou yarn
- Expo CLI
- Android Studio (pour Android) ou Xcode (pour iOS)

### Étapes d'installation

1. **Cloner le repository**
   ```bash
   git clone <url-du-repo>
   cd test.mobile
   ```

2. **Installer les dépendances**
   ```bash
   npm install
   # ou
   yarn install
   ```

3. **Démarrer l'application**
   ```bash
   npm start
   # ou
   yarn start
   ```

4. **Lancer sur un appareil**
   - **Android** : `npm run android`
   - **iOS** : `npm run ios`
   - **Web** : `npm run web`

## 📱 Fonctionnalités

### 🔐 Authentification
- Inscription et connexion utilisateur
- Gestion des sessions avec AsyncStorage
- Changement de mot de passe
- Mise à jour du profil

### 📦 Gestion des Produits
- Affichage de la liste des produits
- Ajout de nouveaux produits
- Modification des produits existants
- Filtrage par catégorie
- Pagination

### 📊 Analytics
- Statistiques de vente
- Graphiques de distribution
- Vue d'ensemble des performances
- Cartes de statistiques

### 🔔 Notifications
- Système de notifications en temps réel
- Gestion des notifications utilisateur

### 🎨 Interface Utilisateur
- Design moderne et responsive
- Support du mode sombre/clair
- Navigation intuitive avec onglets
- Composants réutilisables

## 🏗️ Architecture

### Contextes React
- **AuthContext** : Gestion de l'authentification
- **DataContext** : Gestion des données globales
- **LoadingContext** : Gestion des états de chargement
- **NotifContext** : Gestion des notifications
- **ThemeContext** : Gestion du thème (clair/sombre)

### Navigation
L'application utilise Expo Router avec une structure basée sur les fichiers :
- `(auth)` : Pages d'authentification
- `(tabs)` : Pages principales avec navigation par onglets
- `product` : Pages de gestion des produits

### Stockage
- **AsyncStorage** pour la persistance des données utilisateur
- **JSON statique** pour les données de démonstration

## 🧪 Tests

```bash
npm test
```

## 📦 Scripts Disponibles

- `npm start` : Démarre le serveur de développement
- `npm run android` : Lance l'app sur Android
- `npm run ios` : Lance l'app sur iOS
- `npm run web` : Lance l'app sur le web
- `npm test` : Lance les tests

## 🔧 Configuration

### Variables d'environnement
Créez un fichier `.env` à la racine du projet si nécessaire.

### Configuration Expo
Le fichier `app.json` contient la configuration Expo :
- Nom de l'application : "food.truck.apk"
- Version : 1.0.0
- Orientation : Portrait
- Support iOS et Android

## 📱 Compatibilité

- **iOS** : 13.0+
- **Android** : API 21+
- **Web** : Navigateurs modernes

## 🤝 Contribution

1. Fork le projet
2. Créer une branche pour votre fonctionnalité (`git checkout -b feature/AmazingFeature`)
3. Commit vos changements (`git commit -m 'Add some AmazingFeature'`)
4. Push vers la branche (`git push origin feature/AmazingFeature`)
5. Ouvrir une Pull Request

## 📄 Licence

Ce projet est sous licence 0BSD. Voir le fichier `LICENSE` pour plus de détails.

## 👨‍💻 Auteur

Développé avec ❤️ en utilisant React Native et Expo.

## 📞 Support

Pour toute question ou problème, veuillez ouvrir une issue sur le repository.

---

**Note** : Cette application est conçue comme une démonstration et utilise des données JSON statiques. Pour une utilisation en production, il faudrait intégrer une API backend. `